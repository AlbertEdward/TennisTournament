@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var user = await UserManager.Users
        .Include(u => u.Player)
        .FirstOrDefaultAsync(u => u.Id == userId);
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (User.IsInRole(Roles.Administrator))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="Admin">Admin Panel</a>
            </li>
        }

        if (!User.IsInRole(Roles.User) && !User.IsInRole(Roles.Administrator))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Player" asp-action="MyProfile" asp-route-userId="@user.Id">My Profile</a>
            </li>

            @if (user.Player == null)
            {
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Player" asp-action="AddPlayer">Become a Player</a>
                </li>
            }
        }

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Account</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>

    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
